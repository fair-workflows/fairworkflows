[project]
name = "fairworkflows"
description = "FAIRWorkflows python library"
readme = "README.md"
requires-python = ">=3.6"
license = { file = "LICENSE" }
authors = [
    { name = "Robin Richardson", email = "r.richardson@esciencecenter.nl" },
    { name = "Djura Smits" },
    { name = "Sven van den Burg" },
    { name = "Vincent Emonet", email = "vincent.emonet@gmail.com" },
]
keywords = [
    "Nanopublication",
    "RDF",
    "Linked Data",
    "Publishing"
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dynamic = ["version"]

dependencies = [
    # "nanopub ==1.2.7",
    "nanopub@git+https://github.com/vemonet/nanopub.git",
    "networkx ~=2.5",
    "pyyaml",
    "rdflib <7.0.0,>=6.0.2",
    # "rdflib <6.0.0,>=5.0.0",
    "requests",
    "pyshacl >=0.20.0",
    # "pyshacl >=0.14.1",
    "noodles ==0.3.3",
    "Jinja2 ==2.11.3",
    "pytest",
    "markupsafe ==2.0.1",
]

[project.optional-dependencies]
test = [
    "pytest >=7.1.3,<8.0.0",
    "pytest-cov >=2.12.0,<4.0.0",
    "coveralls",
    "isort >=5.0.6,<6.0.0",
    "flake8 >=3.8.3,<6.0.0",
    "Flake8-pyproject>=1.1.0.post0",
    "flaky",
    "mypy ==0.971",
]
doc = [
    "mkdocs >=1.1.2,<2.0.0",
    "mkdocs-material >=8.2.7,<9.0.0",
    "mkdocstrings[python] >=0.18.1",
    "mdx-include >=1.4.1,<2.0.0",
    "mkdocs-markdownextradata-plugin >=0.1.7,<0.3.0",
    # "jinja2 ==3.0.3",
]
dev = [
    "graphviz==0.14.1",
    "recommonmark",
    "sphinx",
    "sphinx_rtd_theme",

    "pre-commit >=2.17.0,<3.0.0",
    "autoflake >=1.4.0,<2.0.0",
    "jupyter",
    "notebook",
    "types-requests",
]


[project.urls]
Homepage = "https://fair-workflows.github.io/fairworkflows"
Documentation = "https://fair-workflows.github.io/fairworkflows"
History = "https://github.com/fair-workflows/fairworkflows/releases"
Tracker = "https://github.com/fair-workflows/fairworkflows/issues"
Source = "https://github.com/fair-workflows/fairworkflows"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


# ENVIRONMENTS AND SCRIPTS
[tool.hatch.envs.default]
features = [
    "test",
    "doc",
    "dev",
]
post-install-commands = [
    "pre-commit install",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args}"
cov = "pytest --cov=fairworkflows {args}"
format = [
    "isort fairworkflows tests",
    "autoflake --remove-all-unused-imports --recursive --remove-unused-variables --in-place fairworkflows tests --exclude=__init__.py",
    "pre-commit run --all-files || true",
]
check = [
    "isort --check-only --diff .",
    "flake8 .",
]


# TOOLS
[tool.hatch.version]
path = "fairworkflows/_version.py"

[tool.hatch.metadata]
allow-direct-references = true


[tool.isort]
line_length = 120
skip = ["fairworkflows/__init__.py"]
profile = "black"


[tool.coverage.run]
source = ["fairworkflows"]
branch = true

[tool.coverage.report]
omit = ["fairworkflows/templates/*", "tests/*"]


[tool.flake8]
max-complexity = 17
max-line-length = 120
per-file-ignores = [
    "__init__.py:F401",
]
ignore = [
    "E501", # line too long
    "E303", # too many blank lines
    "E301", # expected 1 blank lines found 0
    "W503", # line break before binary operator
]
exclude =[
    ".git",
    "__pycache__",
    "fairworkflows/templates/",
    "fairworkflows/old",
    "venv",
    "env"
]


[tool.mypy]
strict = false
disallow_untyped_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = false
warn_unused_ignores = true


[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "no_rsa_key: mark a test as a test only run when there is no nanopub RSA key setup.",
]

# [tool.black]
# color = true
# line-length = 120
# target-version = ['py310']
# skip-string-normalization = true
